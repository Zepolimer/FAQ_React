{"version":3,"sources":["components/Data.jsx","components/Accordion.jsx","App.js","reportWebVitals.js","index.js"],"names":["Data","question","answer","ImgDeco","styled","div","ImgBox","AccordionSection","Title","h1","Container","Allwrapped","Wrap","QuestionRed","h3","Question","Answer","p","Accordion","useState","clicked","setClicked","Provider","value","color","alt","src","map","item","index","onClick","toggle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAaA,EAAO,CAChB,CACIC,SAAU,uCACVC,OAAQ,oHAEZ,CACID,SAAU,yCACVC,OAAQ,oFAEZ,CACID,SAAU,+BACVC,OAAQ,iIAEZ,CACID,SAAU,iCACVC,OAAQ,8EAEZ,CACID,SAAU,sCACVC,OAAQ,iG,4BCZVC,EAAUC,IAAOC,IAAV,qTAiBPC,EAASF,IAAOC,IAAV,oOAWNE,EAAmBH,IAAOC,IAAV,qnBAuBhBG,EAAQJ,IAAOK,GAAV,uKAULC,EAAYN,IAAOC,IAAV,mKAUTM,EAAaP,IAAOC,IAAV,sHAMVO,EAAOR,IAAOC,IAAV,6GAKJQ,EAAcT,IAAOU,GAAV,2FAKXC,EAAWX,IAAOU,GAAV,0FAMRE,EAASZ,IAAOa,EAAV,yLAkDGC,EAzCG,WAEd,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OACE,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,MAAO,WAAYC,IAAI,QAAtD,SACE,eAAClB,EAAD,WACA,cAACJ,EAAD,UAAS,qBAAKuB,IAA8B,+CAAgDD,IAAI,mBAChG,cAACjB,EAAD,kBACA,cAACF,EAAD,UAAQ,qBAAKoB,IAA8B,uCAAwCD,IAAI,UACrF,cAACf,EAAD,UACGV,EAAK2B,KAAI,SAACC,EAAMC,GACf,OACE,mCACE,eAAClB,EAAD,WACE,eAACC,EAAD,CAAMkB,QAAS,kBApBhB,SAAAD,GACX,GAAGT,IAAYS,EAEX,OAAOR,EAAW,MAGtBA,EAAWQ,GAcsBE,CAAOF,IAA5B,UACE,8BAAMT,IAAYS,EAAQ,cAAChB,EAAD,UAAce,EAAK3B,WAA0B,cAACc,EAAD,UAAWa,EAAK3B,aACvF,+BAAOmB,IAAYS,EAAQ,cAAC,IAAD,IAAqB,cAAC,IAAD,QAFTA,GAIxCT,IAAYS,EACX,cAACb,EAAD,UAASY,EAAK1B,SACZ,qBClIT8B,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.126797ee.chunk.js","sourcesContent":["export const Data = [\n    {\n        question: \"How many team members can I invite ?\",\n        answer: \"You can invite up to 2 additional users on the Free plan.There is no limit on team members for the Premium plan.\"\n    },\n    {\n        question: \"What is the maximum file upload size ?\",\n        answer: \"No more than 2GB. All files in your account must fit your allowed storage space.\"\n    },\n    {\n        question: \"How do I reset my password ?\",\n        answer: \"Click 'Forgot password' from the login page or 'Change password' from your profile page. A reset link will be emailed to you.\"\n    },\n    {\n        question: \"Can I cancel my subscription ?\",\n        answer: \"Yes! Send us a message and we'll process your request, no questions asked.\"\n    },\n    {\n        question: \"Do you provide additional support ?\",\n        answer: \"Chat and email support is available 24/7. Phone lines are open during normal business hours.\"\n    },\n];","import React, { useState } from 'react'\nimport { Data } from './Data';\nimport styled from 'styled-components'\nimport {IconContext} from 'react-icons';\nimport {IoIosArrowUp, IoIosArrowDown} from 'react-icons/io';\n\n\nconst ImgDeco = styled.div`\n    width: 100%;\n    margin: 0 auto;\n    z-index: 10;\n    \n    img {\n        z-index: 3;\n        position: absolute;\n        top: -33%;\n        left: 45%;\n        transform: translate(-50%, 30%);\n    }\n    \n    @media (min-width: 820px) {\n        display: none;\n    }`\n\nconst ImgBox = styled.div`\n    display: none;\n    \n    @media (min-width: 820px) {\n        display: block;\n        position: absolute;\n        top: 55%;\n        left: -7%;\n        transform: translate(-20%, -55%);\n    }`\n\nconst AccordionSection = styled.div`\n    margin: auto;\n    background-color: white;\n    padding: 15vh 2vh 5vh 2vh;\n    width: 80%;\n    border-radius: 25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 0;\n    \n    @media (min-width: 820px) {\n        width: 800px;\n        height:auto;\n        background-image: url(./media/illustration-woman-online-desktop.svg), url(./media/bg-pattern-desktop.svg);\n        background-repeat: no-repeat;\n        background-position: -85px 70px,-571px -290px;\n        background-color: white;\n        border-radius: 2em;  \n    }`\n\n\nconst Title = styled.h1`\n    text-align:center;\n    font-size: 700;\n    \n    @media (min-width: 820px) {\n        width: 45%;\n        margin-left: 55%;  \n    }`\n\n\nconst Container = styled.div`\n    height: auto;\n    cursor: pointer;\n    \n    @media (min-width: 820px) {\n        width: 45%;\n        margin-left: 55%;  \n    }`\n\n\nconst Allwrapped = styled.div`\n    border-bottom: 1px solid #E7E7E9;\n    margin: 20px 0 0 0;\n    padding: 5px 0 20px 0;`\n\n\nconst Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;`\n\nconst QuestionRed = styled.h3`\n    color: #F47C57;\n    font-weight: 700;\n    font-size: 14px`\n\nconst Question = styled.h3`\n    font-size: 14px;\n    color: black;\n    font-weight: 400;`\n\n\nconst Answer = styled.p`\n    font-size: 12px;\n    text-align: justify;\n    margin: 5px 25px 0px 0px;\n    color: hsl(240, 6%, 50%);\n    line-height: 1.2rem;\n    font-weight: 400;`\n\n\nconst Accordion = () => {\n\n    const [clicked, setClicked] = useState(false)\n\n    const toggle = index => {\n        if(clicked === index) {\n            // si la question est déjà cliqué, ça ferme\n            return setClicked(null)\n        }\n\n        setClicked(index)\n    }\n\n    return (\n      <IconContext.Provider value={{ color: '#F47C57'}} alt=\"arrow\">\n        <AccordionSection>\n        <ImgDeco><img src={process.env.PUBLIC_URL + './media/illustration-woman-online-mobile.svg'} alt=\"Woman Online\" /></ImgDeco>\n        <Title>FAQ</Title>\n        <ImgBox><img src={process.env.PUBLIC_URL + './media/illustration-box-desktop.svg'} alt=\"box\" /></ImgBox>\n          <Container>\n            {Data.map((item, index) => {\n              return (\n                <>\n                  <Allwrapped>\n                    <Wrap onClick={() => toggle(index)} key={index}>\n                      <div>{clicked === index ? <QuestionRed>{item.question}</QuestionRed> : <Question>{item.question}</Question>}</div>\n                      <span>{clicked === index ? <IoIosArrowDown /> : <IoIosArrowUp />}</span>\n                    </Wrap>\n                    {clicked === index ? (\n                      <Answer>{item.answer}</Answer>\n                    ) : null}\n                  </Allwrapped>\n                </>\n              )\n            })}\n            </Container>\n        </AccordionSection>\n        </IconContext.Provider>\n    )\n}\n\nexport default Accordion","import './App.css';\nimport Accordion from './components/Accordion';\n\nfunction App() {\n  return (\n    <Accordion />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}